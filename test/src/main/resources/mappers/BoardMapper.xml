<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.green.test.dao.BoardDAO">
<select id="selectBoardList" resultType="kr.green.test.vo.BoardVO">
	select * from board where 
	<choose>	<!-- 쿼리문에서 if 태그는 else를 처리하지 못하기 떄문에 choose태그를 사용 -->
		<when test='valid.equals("I") || valid.equals("D")'>
			valid = #{valid}
		</when>
		<otherwise>		<!-- else일 경우  -->
			valid='I' or valid='D'	<!-- I이거나 D인 경우 전부 검색 -->
		</otherwise>
	</choose>
	<choose>
		<when test="cri.type == 1">
			and title like concat('%',#{cri.search},'%')
		</when>
		<when test="cri.type == 2">
			and writer like concat('%',#{cri.search},'%')
		</when>
		<when test="cri.type == 1">
			and contents like concat('%',#{cri.search},'%')
		</when>
		<otherwise>	<!-- 전체 검색일 경우 -->
			and (title like concat('%',#{cri.search},'%') or writer like concat('%',#{cri.search},'%') or contents like concat('%',#{cri.search},'%'))
		</otherwise>
	</choose>
	order by num desc 
	limit #{cri.pageStart}, #{cri.perPageNum}	<!-- Param을 쓸 경우 객체.속성명으로 getter를 호출 -->
</select>
<select id="selectCountBoardList" resultType="int">
	select count(*) from board where 
	<choose>	<!-- 쿼리문에서 if 태그는 else를 처리하지 못하기 떄문에 choose태그를 사용 -->
		<when test='valid.equals("I") || valid.equals("D")'>
			valid = #{valid}
		</when>
		<otherwise>		<!-- else일 경우  -->
			valid='I' or valid='D'	<!-- I이거나 D인 경우 전부 검색 -->
		</otherwise>
	</choose>
	<choose>
		<when test="cri.type == 1">
			and title like concat('%',#{cri.search},'%')
		</when>
		<when test="cri.type == 2">
			and writer like concat('%',#{cri.search},'%')
		</when>
		<when test="cri.type == 1">
			and contents like concat('%',#{cri.search},'%')
		</when>
		<otherwise>	<!-- 전체 검색일 경우 -->
			and (title like concat('%',#{cri.search},'%') or writer like concat('%',#{cri.search},'%') or contents like concat('%',#{cri.search},'%'))
		</otherwise>
	</choose>
</select>
<insert id="insertBoard">
	insert into board(title, contents, writer, file)
	values(#{board.title}, #{board.contents}, #{board.writer}, #{board.file})
</insert>
<select id="selectBoard" resultType="kr.green.test.vo.BoardVO">
	select * from board where num = #{num}
</select>
<update id="updateBoard">
	update board
	set title = #{board.title}, contents = #{board.contents}, file = #{board.file}, views = #{board.views}, valid = #{board.valid}
	where num = #{board.num}
</update>
</mapper>