<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />	<!-- resources/xx가 입력되면 resources에서 연결  -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />	<!-- prefix : 앞쪽에 붙는 -->
		<beans:property name="suffix" value=".jsp" />	<!-- suffix : 뒤쪽에 붙는 -->
	</beans:bean>	<!-- home만 입력됐을 때 --> 
	
	<context:component-scan base-package="kr.green.test" />
	
	<beans:bean id="loginInterceptor"	
		class="kr.green.test.interceptor.LoginInterceptor">	<!-- 클래스에 파일명을 입력하고 id에는 밑의 interceptors에서 연결할 이름을 입력  -->
	</beans:bean>
	<beans:bean id="authInterceptor" 
		class="kr.green.test.interceptor.AuthInterceptor">	
	</beans:bean>
	<beans:bean id="unauthInterceptor" 
		class="kr.green.test.interceptor.UnauthInterceptor">	
	</beans:bean>
	
	<interceptors>
	    <interceptor>
	        <mapping path="/"/>	<!--	<mapping path="/"/>	 URI 경로에 접근했을 때 인터셉터를 실행		-->
	        <beans:ref bean="loginInterceptor"/>	<!-- 위쪽 beans의 id와 일치해야 한다 -->
	    </interceptor>
   		<interceptor>
	        <mapping path="/board/register"/>	<!-- 로그인이 안됐을 떄 board 경로에 접근할 시 -->
	        <mapping path="/board/modify"/>
	        <mapping path="/board/delete"/>	        
	        <beans:ref bean="authInterceptor"/>	<!-- 로그인이 안됐을 때 접근을 막는 preHandle -->
		</interceptor>
   		<interceptor>
	        <mapping path="/signin"/>	<!-- 로그인이 됐을 때 로그인이나 회원가입 경로나 홈에 접근할 시 -->
	        <mapping path="/signup"/>
	        <beans:ref bean="unauthInterceptor"/>	<!-- 로그인이 됐을 때 접근을 막는 preHandle 인터페이스 -->
		</interceptor>
	</interceptors>	
	
	<!-- servlet-context.xml -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <!-- 업로드 최대 크기 10Mb -->
	    <beans:property name="maxUploadSize" value="10485760"></beans:property>		<!-- value : 한번에 전송 가능한 크기(byte) -->
	</beans:bean>
	
	<!-- servlet-context.xml에 추가 -->
	<beans:bean id="uploadPath" class="java.lang.String">
	    <!--
		<beans:constructor-arg value="서버에 저장할 경로"></beans:constructor-arg>
		-->
	    <beans:constructor-arg value="C:\\Users\\82102\\Desktop\\java\\git\\test\\uploadfiles"></beans:constructor-arg>
	</beans:bean>
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <beans:property name="order" value="1" /><!-- 순서를 우선으로 지정 -->
    </beans:bean>
     
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/spring/tiles-def.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
    
</beans:beans>
